<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-06T18:43:25 EST" name="Suite" finished-at="2021-03-06T18:44:40 EST" duration-ms="74402">
    <groups>
    </groups>
    <test started-at="2021-03-06T18:43:25 EST" name="Test" finished-at="2021-03-06T18:43:40 EST" duration-ms="14416">
      <class name="test1.Test1">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test1.Test1@70d2e40b]" started-at="2021-03-06T18:43:25 EST" name="beforeTest" finished-at="2021-03-06T18:43:38 EST" duration-ms="12415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test1(java.lang.String,java.lang.String)[pri:0, instance:test1.Test1@70d2e40b]" started-at="2021-03-06T18:43:38 EST" name="test1" data-provider="getData" finished-at="2021-03-06T18:43:38 EST" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Harry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kane]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test1(java.lang.String,java.lang.String)[pri:0, instance:test1.Test1@70d2e40b]" started-at="2021-03-06T18:43:38 EST" name="test1" data-provider="getData" finished-at="2021-03-06T18:43:38 EST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kumar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Malar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="terminate()[pri:0, instance:test1.Test1@70d2e40b]" started-at="2021-03-06T18:43:38 EST" name="terminate" finished-at="2021-03-06T18:43:40 EST" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- terminate -->
      </class> <!-- test1.Test1 -->
    </test> <!-- Test -->
    <test started-at="2021-03-06T18:43:25 EST" name="Test2" finished-at="2021-03-06T18:44:40 EST" duration-ms="74402">
      <class name="test1.Test2">
        <test-method is-config="true" signature="initialization()[pri:0, instance:test1.Test2@1e11bc55]" started-at="2021-03-06T18:43:25 EST" name="initialization" finished-at="2021-03-06T18:43:38 EST" duration-ms="12383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="assertTitle()[pri:0, instance:test1.Test2@1e11bc55]" started-at="2021-03-06T18:43:38 EST" name="assertTitle" finished-at="2021-03-06T18:43:38 EST" duration-ms="53" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Tool] but found [ToolsQA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Tool] but found [ToolsQA]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test1.Test2.assertTitle(Test2.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertTitle -->
        <test-method is-config="true" signature="terminate()[pri:0, instance:test1.Test2@1e11bc55]" started-at="2021-03-06T18:44:39 EST" name="terminate" finished-at="2021-03-06T18:44:40 EST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- terminate -->
      </class> <!-- test1.Test2 -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
